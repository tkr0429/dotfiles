set modelines=0
set cindent
set list!
set listchars=tab:>-
set noswapfile
set wildmode=longest:full,full
vnoremap <silent> > >gv
vnoremap <silent> < <gv
"行番号を表示する
set number

"新しい行を開始したときに、新しい行のインデントを現在行と同じ量にする
set autoindent

"新しい行を作ったときに高度な自動インデントを行う
set smartindent

"タブの代わりに空白文字を挿入する
set expandtab

"ファイル内の <Tab> が対応する空白の数
set tabstop=4

"tabstopを変えずに空白を含めることにより、見た目のtabstopを変える
set softtabstop=4

"自動インデントの各段階に使われる空白の数
set shiftwidth=4

"シンタックス設定
syntax on

"補完候補を表示する
set wildmenu

"カーソル行をハイライト
set cursorline

"検索語を強調表示（<C-L>を押すと現在の強調表示を解除する）
set hlsearch

"検索で、大文字小文字を区別しない
set ignorecase
"検索で小文字なら大文字を無視、大文字なら無視しない設定
set smartcase

"インクリメンタルサーチを行う
set incsearch

"オートインデント、改行、インサートモード開始直後にバックスペースキーで削除できるようにする
set backspace=indent,eol,start

"insertモードを抜けるとIMEオフ
"set noimdisable
"set iminsert=0 imsearch=0
"set noimcmdline
inoremap <silent> <ESC> <ESC>:set iminsert=0<CR>

"保存時に行末の空白を除去する
autocmd BufWritePre * :%s/\s\+$//e

"NERDTreeでdotfilesを表示する
"let NERDTreeShowHidden=1

"autoreadのチェック
augroup vimrc-checktime
  autocmd!
  autocmd WinEnter * checktime
augroup END

"タブの設定
" Anywhere SID.
function! s:SID_PREFIX()
  return matchstr(expand('<sfile>'), '<SNR>\d\+_\zeSID_PREFIX$')
endfunction

" Set tabline.
function! s:my_tabline()  "{{{
  let s = ''
  for i in range(1, tabpagenr('$'))
    let bufnrs = tabpagebuflist(i)
    let bufnr = bufnrs[tabpagewinnr(i) - 1]  " first window, first appears
    let no = i  " display 0-origin tabpagenr.
    let mod = getbufvar(bufnr, '&modified') ? '!' : ' '
    let title = fnamemodify(bufname(bufnr), ':t')
    let title = '[' . title . ']'
    let s .= '%'.i.'T'
    let s .= '%#' . (i == tabpagenr() ? 'TabLineSel' : 'TabLine') . '#'
    let s .= no . ':' . title
    let s .= mod
    let s .= '%#TabLineFill# '
  endfor
  let s .= '%#TabLineFill#%T%=%#TabLine#'
  return s
endfunction "}}}
let &tabline = '%!'. s:SID_PREFIX() . 'my_tabline()'
set showtabline=2 " 常にタブラインを表示

" The prefix key.
nnoremap    [Tag]   <Nop>
nmap    t [Tag]
" Tab jump
for n in range(1, 9)
  execute 'nnoremap <silent> [Tag]'.n  ':<C-u>tabnext'.n.'<CR>'
endfor
" t1 で1番左のタブ、t2 で1番左から2番目のタブにジャンプ

map <silent> [Tag]c :tablast <bar> tabnew<CR>
" tc 新しいタブを一番右に作る
map <silent> [Tag]x :tabclose<CR>
" tx タブを閉じる
map <silent> [Tag]n :tabnext<CR>
" tn 次のタブ
map <silent> [Tag]p :tabprevious<CR>
" tp 前のタブ

" indent settings
autocmd FileType json setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType yaml setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType yml  setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType xml  setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType sh   setlocal shiftwidth=4 tabstop=4 softtabstop=4
autocmd FileType zsh  setlocal shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType rb   setlocal shiftwidth=2 tabstop=2 softtabstop=2

