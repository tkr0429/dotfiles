" JavaScript Lint
"if !exists('b:current_compiler')
  "compiler jsl
"endif
autocmd QuickFixCmdPost make copen

autocmd FileType gitv call s:my_gitv_settings()
function! s:my_gitv_settings()
  "TODO
endfunction

" vimshell
let g:vimshell_prompt_expr = 'getcwd()." > "'
let g:vimshell_prompt_pattern = '^\f\+ > '
"let g:vimshell_interactive_update_time = 10

" jscomplete-vim
let g:jscomplete_use = ['dom', 'moz', 'es6th']

" easy-motion
let g:EasyMotion_do_mapping = 0
nmap s <Plug>(easymotion-s2)

" Vimfiler
let g:vimfiler_as_default_explorer = 1

" go
set runtimepath+=$GOROOT/misc/vim
autocmd BufNewFile,BufRead *.go set filetype=go

" quickrun
let g:quickrun_config = {}
"" enable vimproc
let g:quickrun_config['*'] = {
    \  'runner': 'vimproc',
    \  'split': 'below'
    \}

"" Node
let g:quickrun_config.javascript = {
    \  'command': 'node',
    \  'tempfile': '{tempname()}.js'
    \}

"" Go
let g:quickrun_config.go = {
    \  'command': 'go',
    \  'exec': '%c run *.go'
    \}


" syntastic
let g:syntastic_go_checkers = ['go', 'golint']

" tagbar
let g:tagbar_type_go = {
    \ 'ctagstype' : 'go',
    \ 'kinds'     : [
        \ 'p:package',
        \ 'i:imports:1',
        \ 'c:constants',
        \ 'v:variables',
        \ 't:types',
        \ 'n:interfaces',
        \ 'w:fields',
        \ 'e:embedded',
        \ 'm:methods',
        \ 'r:constructor',
        \ 'f:functions'
    \ ],
    \ 'sro' : '.',
    \ 'kind2scope' : {
        \ 't' : 'ctype',
        \ 'n' : 'ntype'
    \ },
    \ 'scope2kind' : {
        \ 'ctype' : 't',
        \ 'ntype' : 'n'
    \ },
    \ 'ctagsbin'  : 'gotags',
    \ 'ctagsargs' : '-sort -silent'
\ }

au BufNewFile,BufRead *.go :TagbarOpen
